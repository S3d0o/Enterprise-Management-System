@model IEnumerable<UserDto>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<partial name="_ToastPartialView"></partial>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const toastElList = [].slice.call(document.querySelectorAll('.toast'));
            toastElList.forEach(function (toastEl) {
                const toast = new bootstrap.Toast(toastEl, { delay: 5000 });
                toast.show();
            });
        });
    </script>
}

<h1 class="my-5 w-50 mx-auto text-center fw-bold border-bottom pb-3">All Users</h1>
<div class="container">
    <form class="row justify-content-center align-items-center" asp-action="Index" method="get">
        <!-- Search -->
        <div class="col-md-6">
            <div class="input-group shadow rounded-pill">
                <input class="form-control border-0 rounded-pill rounded-end-0 px-3"
                       type="text"
                       id="searchBox"
                       name="searchByEmail"
                       placeholder="Search By Email..."
                       aria-label="Search"
                       style="height: 50px; font-size: 1.1rem;" />
                <button class="btn btn-primary rounded-pill rounded-start-0 px-3"
                        type="submit"
                        id="searchButton"
                        style="height: 50px;">
                    <i class="bi bi-search"></i>
                </button>
            </div>
        </div>
    </form>
</div>

<div class="container mt-3" style="min-height: 500px;">
    @if (Model?.Any() ?? false)
    {
        <table class="table table-striped table-hover shadow rounded-bottom">
            <thead class="text-center">
                <tr>
                    <th>@Html.DisplayNameFor(u => u.Id)</th>
                    <th>@Html.DisplayNameFor(u => u.FirstName)</th>
                    <th>@Html.DisplayNameFor(u => u.LastName)</th>
                    <th>@Html.DisplayNameFor(u => u.Email)</th>
                    <th>@Html.DisplayNameFor(u => u.Roles)</th>
                    
                    <th>Details</th>
                    <th>Update</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody class="text-center">
                @foreach (var user in Model)
                {
                    <tr>
                        @* <td>
                            <img class="rounded-circle" width="40" height="40" src="~/Attachments/Images/@(!string.IsNullOrEmpty(user.ImageName) ? user.ImageName : "user.png")" alt="Employee Image" />
                        </td> *@
                        <td>@user.Id</td>
                        <td>@user.FirstName</td>
                        <td>@user.LastName</td>
                        <td>@user.Email</td>
                        <td>@string.Join(",",user.Roles)</td>
                        <partial name="_ButtonsPartialView"
                                 model="@user.Id"
                                 view-data='new ViewDataDictionary(ViewData) {
                                                                       { "EntityType", "User" },
                                                                       { "Controller", "User" },
                                                                       { "Name", (user.FirstName +" "+ user.LastName) }
                                                                   }' />

            </tr>
                        }
            </tbody>
        </table>
    }
    else
    {
        <div class="alert alert-info text-center">
            <h2>No Users Found</h2>
        </div>
    }
</div>
